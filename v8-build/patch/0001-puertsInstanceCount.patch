From 1f256b71fce1a2950792c71a5a5a3070d1dc2283 Mon Sep 17 00:00:00 2001
From: zombieyang <zombieyang@tencent.com>
Date: Sun, 30 May 2021 13:56:16 +0800
Subject: [PATCH] puertsInstanceCount

---
 src/builtins/builtins-definitions.h | 3 ++-
 src/builtins/builtins-string.cc     | 4 ++++
 src/compiler/typer.cc               | 2 ++
 src/init/bootstrapper.cc            | 4 ++++
 4 files changed, 12 insertions(+), 1 deletion(-)

diff --git a/src/builtins/builtins-definitions.h b/src/builtins/builtins-definitions.h
index 84ddf55f6f..13a7dea8a9 100644
--- a/src/builtins/builtins-definitions.h
+++ b/src/builtins/builtins-definitions.h
@@ -791,7 +791,8 @@ namespace internal {
   TFJ(StringPrototypeTrimEnd, kDontAdaptArgumentsSentinel)                     \
   TFJ(StringPrototypeTrimStart, kDontAdaptArgumentsSentinel)                   \
   /* ES6 #sec-string.raw */                                                    \
-  CPP(StringRaw)                                                               \
+  CPP(StringRaw)                                                     \
+  CPP(StringPuertsInstanceCount)                                                           \
                                                                                \
   /* Symbol */                                                                 \
   /* ES #sec-symbol-constructor */                                             \
diff --git a/src/builtins/builtins-string.cc b/src/builtins/builtins-string.cc
index 8a897765c8..67a6c6fc78 100644
--- a/src/builtins/builtins-string.cc
+++ b/src/builtins/builtins-string.cc
@@ -419,6 +419,10 @@ BUILTIN(StringPrototypeToUpperCase) {
 }
 #endif  // !V8_INTL_SUPPORT
 
+BUILTIN(StringPuertsInstanceCount) {
+  return *isolate->factory()->NewNumber(2.0);
+}
+
 // ES6 #sec-string.prototype.raw
 BUILTIN(StringRaw) {
   HandleScope scope(isolate);
diff --git a/src/compiler/typer.cc b/src/compiler/typer.cc
index 6d53531f1c..0f64f8b149 100644
--- a/src/compiler/typer.cc
+++ b/src/compiler/typer.cc
@@ -1663,6 +1663,8 @@ Type Typer::Visitor::JSCallTyper(Type fun, Typer* t) {
     case Builtins::kStringPrototypeEndsWith:
     case Builtins::kStringPrototypeIncludes:
       return Type::Boolean();
+    case Builtins::kStringPuertsInstanceCount:
+      return Type::Number();
     case Builtins::kStringRaw:
     case Builtins::kStringRepeat:
     case Builtins::kStringPrototypeSlice:
diff --git a/src/init/bootstrapper.cc b/src/init/bootstrapper.cc
index f4049e328e..9e06c9190e 100644
--- a/src/init/bootstrapper.cc
+++ b/src/init/bootstrapper.cc
@@ -1917,6 +1917,10 @@ void Genesis::InitializeGlobal(Handle<JSGlobalObject> global_object,
     SimpleInstallFunction(isolate_, string_fun, "raw", Builtins::kStringRaw, 1,
                           false);
 
+    // Install the String.raw function.
+    SimpleInstallFunction(isolate_, string_fun, "puertsInstanceCount", Builtins::kStringPuertsInstanceCount, 1,
+                          false);
+
     // Create the %StringPrototype%
     Handle<JSPrimitiveWrapper> prototype = Handle<JSPrimitiveWrapper>::cast(
         factory->NewJSObject(string_fun, AllocationType::kOld));
-- 
2.30.1 (Apple Git-130)

